#PBS -P QCL_KF
#PBS -N job_3_test_case_20
#PBS -J 1-6
#PBS -M riddhi.sw@gmail.com
#PBS -m abe
#PBS -l select=1:ncpus=1:mem=100GB
#PBS -l walltime=1000:00:00 
#PBS -q defaultQ
#PBS -j oe

cd $PBS_O_WORKDIR/

# Test_case_20 == test_case_17, but also changing the Kalman computational basis
# such that fs = bdelta*n_train = constant = rB = 1000. 
# The equation above matters because we know that an optimal training time
# exists for extracting Kalman amplitudes under imperfect learning.

# The test_script_generator_whitenoise_varbdelta.py has been modified to include 
# bdelta as a variable, and a reduced number of skip msmt calculations.

test_case=20
variation=(0 1 2 3 4 5 6)
var_n_train_=(0 1000 2000 3000 4000 5000 8000)
var_n_predict_=100
var_multiplier_=20
var_f0_=0.0008888889
var_J_=45000
var_alpha_=1000.0
var_noiselvl_=0.01
var_bdelta_=(0 1.0 0.5 0.333 0.25 0.2 0.125)

module load python

python ./test_script_generator_whitenoise_varbdelta.py ${test_case} ${variation[$PBS_ARRAY_INDEX]} ${var_f0_} ${var_J_} ${var_multiplier_} ${var_n_train_[$PBS_ARRAY_INDEX]} ${var_n_predict_} ${var_alpha_} ${var_noiselvl_} ${var_bdelta_[$PBS_ARRAY_INDEX]} /scratch/RDS-FSC-QCL_KF-RW/Kalman/test_case_${test_case}
